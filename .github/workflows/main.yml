name: Releases app

on:
  workflow_dispatch:
    inputs:
      drafg:
        description: 'Create as draft release'
        type: boolean
        default: true
        
  push:
    tags:
      - 'v*' # main release
      # draft release
      - 'v*beta'
      - 'v*alpha'

env: 
  PROJECT_PATH: ScanTextImage/ScanTextImage.csproj

jobs:
  deploy:
    name: deploy WPF app
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      
      - name : Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'
        
      - name: Restore, build and publish project
        run: |
          dotnet restore ${{env.PROJECT_PATH}}
          dotnet build ${{env.PROJECT_PATH}} -c Release --no-restore
          dotnet publish ${{env.PROJECT_PATH}} -c Release --self-contained false --no-build

      - name: zip folder
        run: Compress-Archive -Path ScanTextImage/bin/Release/net8.0-windows/publish/* -Destination ScanTextImage/ScanTextFromImage.zip

      - name: Set release conditions
        id: release_config
        run: |
          if [[ ${{ github.ref }} = *"beta"* ]] || [[ ${{ github.ref }} == *"alpha"* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "is_draft=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "is_draft=false" >> $GITHUB_OUTPUT
          fi
        shell: bash
            
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, do not need to create own token
        with:
          tag_name: ${{ github.ref_name  }}
          release_name: Release ${{ github.ref_name  }}
          body: TODO
          draft: ${{ github.event_name == 'workflow_dispatch' && inputs.draft || steps.release_config.outputs.is_draft }}
          prerelease: ${{ steps.release_config.outputs.is_prerelease }}
          files: ScanTextImage/ScanTextFromImage.zip
      
      # - name: Upload release assert
      #   uses: csexton/release-asset-action@v3
      #   with:
      #     pattern: ScanTextImage/*.zip
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     release-url: ${{ steps.create_release.outputs.upload_url }}
